{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","habits","map","id","onReset","Component","Navbar","totalCount","App","state","setState","item","filter","handleAdd","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b317009.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n\r\n    handleIncrement = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n    };\r\n\r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    }\r\n\r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    }\r\n\r\n    render() {\r\n\r\n        //const habitName = this.props.habit.name 이 형식 보다\r\n        const { name, count } = this.props.habit;\r\n        \r\n        return (\r\n            <li className=\"habit\">\r\n                <span className=\"habit-name\">{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                    <i className=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo(props => {\r\n  //ref를 연결해서 DOM요소에 접근\r\n  const inputRef = React.createRef();\r\n  const formRef = React.createRef();\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const name = inputRef.current.value;\r\n    name && props.onAdd(name);\r\n    // inputRef.current.value = '';\r\n    formRef.current.reset();\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n      <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Please Enter Your Habit\" />\r\n      <button className=\"add-button\">Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default HabitAddForm;","import React, { Component } from 'react'\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm';\r\n\r\nclass Habits extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HabitAddForm onAdd={this.props.onAdd}/>\r\n                <ul>\r\n                    {\r\n                        this.props.habits.map(habit => (\r\n                            //props 전달\r\n                            <Habit \r\n                            key={habit.id} \r\n                            habit={habit}\r\n                            onIncrement={this.props.onIncrement}\r\n                            onDecrement={this.props.onDecrement}\r\n                            onDelete={this.props.onDelete} />\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react'\r\n\r\nclass Navbar extends PureComponent {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\n\nclass App extends Component {\n  state = {\n    habits: [\n        {id: 1, name: 'Reading', count: 0},\n        {id: 2, name: 'Running', count: 0},\n        {id: 3, name: 'Coding', count: 0},\n    ]\n  };\n\n  handleIncrement = habit => {\n    // Incorrect\n    // const habits = [...this.state.habits];\n    // const index = habits.indexOf(habit);\n    // habits[index].count++; \n    //배열 안의 오브젝트를 바로 수정하는 것도 좋지않다.=>수정필요\n\n    // correct-> 아래처럼 수정\n    // 배열, 배열안의 오브젝트를 복사해서 수정\n    // const habits = this.state.habits.map(item => {\n    //   if(item.id === habit.id) {\n    //     return {...habit, count: item.count + 1}\n    //   }\n    //   return item;\n    // });\n\n    // this.setState({ habits });\n    // this.setState({ habits: habits }); 키와 값의 이름이 같으면 생략이 가능하다.\n\n    //또는 이전 state를 받아서 이걸로 state.habits.map을 돌려서 새로운 state를 리턴.\n    this.setState(state => {\n      const habits = state.habits.map(item => {\n        if(item.id === habit.id) {\n          return {...habit, count: item.count + 1}\n        }\n        return item;\n      })\n      return {habits};\n    })\n  }\n\n  handleDecrement = habit => {\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id) {\n        const count = item.count - 1;\n        return {...habit, count: count < 0 ? 0 : count }\n      }\n      return item;\n    });\n\n    this.setState({ habits });\n  };\n\n  handleDelete = habit => {\n      // const habits = [...this.state.habits];\n      // filter자체가 새로운 배열을 만들어서 감싼다.\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({ habits });\n  };\n\n  handleAdd = name => {\n    const habits = [...this.state.habits, {id: Date.now(), name, count: 0}];\n    this.setState({ habits });\n  };\n\n  handleReset = () =>{\n    // const habits = this.state.habits.map(habit => {\n    //   habit.count = 0\n    //   return habit;\n    // })\n\n    const habits = this.state.habits.map(habit => {\n      // habit.count = 0\n      if(habit.count !== 0) {\n        return {...habit, count: 0}\n      }\n      return habit;\n    })\n\n    this.setState({ habits });\n  }\n\n  render() {\n    return (\n      <>\n      <Navbar totalCount={this.state.habits.filter(item => item.count > 0).length}/>\n      <Habits \n       habits={this.state.habits}\n       onIncrement={this.handleIncrement}\n       onDecrement={this.handleDecrement}\n       onDelete={this.handleDelete} \n       onAdd={this.handleAdd} \n       onReset={this.handleReset} \n       />\n       </>\n    )\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './app.css';\nimport App from './app';\n// import SimpleHabit from './components/simpleHabit';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}